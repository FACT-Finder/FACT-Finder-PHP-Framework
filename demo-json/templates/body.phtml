<?php
	// Helper function to render the whole advisor tree (only used as debug output)
	function renderAdvisorQuestion($question) {
		echo '<span class="question">'.$question->getText().'</span><br/>';
		echo '<div style="margin-left:10px;">';
		foreach($question->getAnswers() AS $answer) {
			echo '<span class="answer">'.$answer->getText().'</span><br/>';
			if($answer->hasSubquestions()) {
				echo '<div style="margin-left:10px;">';
				foreach($answer->getSubquestions() AS $subquestion) {
					renderAdvisorQuestion($subquestion);
				}
				echo '</div>';
			}
		}
		echo '</div>';
	}
	
	if ($campaigns->hasAdvisorTree()) {
		echo '<div id="advisorCampaign">';
		echo '<p>Debug-Ausgabe:</p>';
		echo '<div style="margin-left:10px;">';
		foreach($campaigns->getAdvisorTree() AS $question) {
			renderAdvisorQuestion($question);
		}
		echo '</div>';
		echo '</div>';
	}
	
	if ($campaigns->hasActiveQuestions()) {
		echo '<div id="advisorCampaign">';
		foreach($campaigns->getActiveQuestions() AS $question) {
			echo '<p class="question">'.$question->getText().'</p>';
			foreach($question->getAnswers() AS $answer) {
				echo '<a class="answer" href="'.$answer->getParams().'">'.$answer->getText().'</a>';
			}
		}
		echo '</div>';
	}
	

	// breadcrumbs
	if (isset($result) && count($result) > 0 && !$ffparams->isNavigation()) {
		$breadCrumbTrailString = '';
		foreach($breadCrumbTrail AS $breadCrumb) {
			if ($breadCrumbTrailString != '') {
				$breadCrumbTrailString .= ' &raquo; ';
			}
			$breadCrumbTrailString .= '<a href="'.$breadCrumb->getUrl().'">'.htmlspecialchars($breadCrumb->getValue()).'</a>';
		}
		echo '
			<p id="breadCrumbTrail">'.
				$i18n->msg('result_head_searchFor', $breadCrumbTrailString, $result->getFoundRecordsCount()).
			'</p>';
	}

	echo $campaigns->getFeedback('below breadcrumb');

	if ($isSearchTimedOut) {
		echo '<p class="timeout">'. $i18n->msg('result_searchTimedOut').'</p>';
	}

	// single words
	if (!empty($singleWordSearch) && count($singleWordSearch) > 0) {
		echo '<p class="resultSingleQueries">'.$i18n->msg('result_badMatchingQueryParts').'</p>';
		echo '<ul class="resultSingleQueriesList">';
		foreach($singleWordSearch AS $query) {
			echo '<li><a href="'.$query->getUrl().'">'.htmlspecialchars($query->getQuery()).' ('.$query->getHitCount().')</a></li>';
		}
		echo '</ul>';
	}

	echo $campaigns->getFeedback('above search result');
	
	// sorting and paging or info text, if navigation is enabled
	if (isset($result) && count($result) > 0 && !$ffparams->isNavigation()) {
		echo '<div class="optionBox sortBox">'.$i18n->msg('result_sort').'
				<select onchange="document.location.href=this.value;">';
		foreach ($sorting AS $sortItem) {
			if ($sortItem->isSelected()) {
				$selected = ' selected ';
			} else {
				$selected = '';
			}
            $labelKey = preg_replace('/^sort[.]/', 'sorting_', $sortItem->getValue());
			echo '<option value="'.$sortItem->getUrl().'"'.$selected.'>'. $i18n->msg($labelKey);
			if ($sortItem->isSelected()) {
				echo ' ('.$i18n->msg('sorting_selected').')';
			}
			echo '</option>';
		}
		echo '</select>
			</div>';

		include $this->getTemplate('paging');

	} else {
		echo '<div class="paging browseTop">
				'.$i18n->msg('catalog_useAsn').'
			</div>';
	}

	include $this->getTemplate('previewImageAsn');

	echo '<div id="results">'; // result body

	echo $campaigns->getFeedback('above pushed product');
	
	// pushed products on top
	if ( (empty($asn) || !$asn->hasPreviewImages()) && isset($campaigns) && $campaigns->hasPushedProducts()) {
		echo '<div id="pushedProducts">
				<p>'.$i18n->msg('result_pushedProducts').'</p>';
		foreach ($campaigns->getPushedProducts() AS $record) {
			include $this->getTemplate('product');
		}
		echo '</div>
			<div class="clear">&nbsp;</div>';
	}

	// results
	echo '<div id="resultWrap">';
	foreach($result AS $record) {
		include $this->getTemplate('product');
	}
	echo '</div>';

	// eof result body
	echo '</div>
		<div class="clear">&nbsp;</div>';

	// show products per page and paging
	if (isset($result) && count($result) > 0 && !$ffparams->isNavigation()) {
		include $this->getTemplate('paging');

		echo '<div class="optionBox">
			<select onchange="document.location.href=this.value;" />';
		foreach($productsPerPageOptions AS $option) {
			if ($option->isSelected()) {
				$selected = ' selected ';
			} else {
				$selected = '';
			}
			echo '<option value="'.$option->getUrl().'" '.$selected.'>
					'.$i18n->msg('result_productsPerPage', $option->getValue()).'
				</option>';
		}

		echo '</select>
			</div>';
	}

	echo $campaigns->getFeedback('below search result');
?>